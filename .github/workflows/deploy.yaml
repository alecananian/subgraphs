name: Deploy Graph

on:
  pull_request:
    types: [opened, ready_for_review, synchronize]
  push:
    branches: [master]

jobs:
  changes:
    name: Detect Changes
    runs-on: ubuntu-latest
    outputs:
      treasure_sinks: ${{ steps.filter.outputs.bridgeworld }}
    steps:
    - name: Check out code
      uses: actions/checkout@v2
    - uses: dorny/paths-filter@v2
      id: filter
      with:
        filters: |
          treasure_sinks:
            - "packages/**"
            - "subgraphs/treasure-sinks/**"

  treasure_sinks:
    name: Treasure Sinks Subgraph
    if: ${{ needs.changes.outputs.treasure_sinks == 'true' }}
    needs: changes
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./subgraphs/treasure-sinks
    steps:
      - name: Check out code
        uses: actions/checkout@v2
      - name: Install Node
        uses: actions/setup-node@v1
        with:
          node-version: 14
      - name: Install dependencies
        run: yarn --frozen-lockfile
      - name: Prepare for DEV
        if: github.event_name == 'pull_request' && github.event.pull_request.draft == false
        run: yarn prepare:dev
      - name: Prepare for PROD
        if: github.event_name == 'push' && github.ref == 'refs/heads/master'
        run: yarn prepare:prod
      - name: Generate code
        run: yarn codegen
      - name: Test
        run: yarn test
      - name: Authenticate
        env:
          GRAPH_ACCESS_TOKEN: ${{ secrets.GRAPH_ACCESS_TOKEN }}
        run: yarn graph auth --product hosted-service "$GRAPH_ACCESS_TOKEN"
      - name: Deploy to DEV
        if: github.event_name == 'pull_request' && github.event.pull_request.draft == false
        run: yarn deploy:dev
      - name: Deploy to PROD
        if: github.event_name == 'push' && github.ref == 'refs/heads/master'
        run: yarn deploy:prod
